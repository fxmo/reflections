What happens when you initialize a repository? Why do you need to do it?

    a git folder gets created, but no initial commit takes place
	
How is the staging area different from the working directory and the repository? What value do you think it offers?

	preparation area before committing - potentially some or all - files in the repository
	the staging area is a copy of the most recent commit until changes are added to it
	staging area contains "what is to be committed"
	>>>use "git diff" to compare working directory to stating area
	>>>use "git diff --staged" to compare staging area to latest commit
	
How can you use the staging area to make sure you have one commit per logical change?

	only files affected by and reflecting the logical change are added to stating area to be committed separately

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	creating alternative versions of the code (eg. adding experimental features, different languages)
	
How do the diagrams help you visualize the branch structure?

	diagrams show the parent/child relationship for each commit, hence visualising the succession of commits in each branch
	remark: HEAD: means current commit

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	merging branches will combine all changes recorded in the commits in the merged branches

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	it speeds up the process and does all merging automatically where there is no risk of error
	
